name: Build and deploy latex sources to GitHub Pages

on: push

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    # Необходимо использовать этот action, чтобы получить содержимое репо

    - uses: actions/checkout@v2

    # Компилируем документ

    - name: Build document

      uses: xu-cheng/latex-action@v2

      with:

        root_file: main.tex

        # Аргументы, к которыми запускать компилятор (latexmk)

        # -jobname=<name> дает возможность поменять имя выходного файла

        args: -jobname=umf -pdf -file-line-error -halt-on-error -interaction=nonstopmode

        compiler: latexmk

    # Загружаем собранные pdf-файлы

    - name: Upload pdf document

      uses: actions/upload-artifact@v2

      with:

        # Это значение используется как ключ в хранилище

        name: umf

        # Путь до собранного pdf. Может содержать «*», «**»

        # Здесь это <working_directory>/<jobname>.pdf

        path: umf.pdf
  deploy:

    runs-on: ubuntu-latest

    # Деплой будет только на ветке master. Закомментируйте, если не надо

    if: github.ref == 'refs/heads/main'

    # Можно зависеть от любого другого job. Порядок выполнения будет подстраиваться.

    needs: [build]

    steps:

      # Это хак, чтобы дергать bash-команды и запоминанать их результат

      - name: Variables

        # id используется внутренне: по нему можно ссылаться на результаты из другого step

        id: vars

        # echo в таком форматировании позволит впоследствии ссылаться на результаты через ${{ steps.<step_id>.outputs.<variable_name> }}

        # Вертикальная черта | — это специальный символ yaml. Означает, что дальше идет массив команд и их все надо выполнить

        run: |
          echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"

      - name: Download artifacts

        uses: actions/download-artifact@v2

        with:

          # Тот самый ключ, который мы указывали в upload-artifact

          name: umf

      - name: Create Release

        uses: actions/create-release@v1

        id: create_release

        env:

          # По офф.документации, надо указать GITHUB_TOKEN

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions

        with:

          # Берем результат из step с id=vars (см. выше). 

          # Получим теги вида “umf-<дата билда>-<первые 8 символов из sha коммита>

          tag_name: umf-${{ steps.vars.outputs.date }}

          # Имя, которое будет высвечиваться в релизе

          release_name: umf (version ${{ steps.vars.outputs.date }})

          # Наш релиз не набросок и не пререлиз, так что оба в false

          draft: false

          prerelease: false

      # Прикладываемые файлы надо заливать отдельным step

      - name: Upload pdf asset

        uses: actions/upload-release-asset@v1

        env:

          # Тоже требуется токен

          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        with:

          # Из предыдущего step с id=create_release генерится upload_url — по нему и надо заливать

          upload_url: ${{ steps.create_release.outputs.upload_url }}

          # Не переходим в папку latex_sources, поскольку download-artifacts грузит в текущую директорию

          asset_path: ./umf.pdf

          # Имя, которое будет высвечиваться в релизе

          asset_name: umf_asset.pdf

          asset_content_type: application/pdf
